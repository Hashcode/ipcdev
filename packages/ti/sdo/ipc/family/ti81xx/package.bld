/*
 * Copyright (c) 2013, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 */
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');
var IpcBuild = xdc.loadCapsule("ti/sdo/ipc/Build.xs");

var objList_common = [
    "NotifySetup.c",
    "NotifyCircSetup.c",
    "NotifyMbxSetup.c",
    "NotifyDriverMbx.c"
];

var objList_674 = [
    "InterruptDsp.c"
].concat(objList_common);

var trgFilter_674 = {
    field: "isa",
    list: [ "674" ]
};

var objList_m3 = [
    "InterruptDucati.c"
].concat(objList_common);

var trgFilter_m3 = {
    field: "isa",
    list: [ "v7M" ]
};

var objList_a8f = [
    "InterruptHost.c"
].concat(objList_common);

var trgFilter_a8f = {
    field: "isa",
    list: [ "v7A", "v7A8" ]
};

/* if not building a product release, build package libraries */
if (Bld_goal != "release") {
    IpcBuild.buildLibs(objList_674, undefined, trgFilter_674, arguments);
    IpcBuild.buildLibs(objList_m3, undefined, trgFilter_m3, arguments);
    IpcBuild.buildLibs(objList_a8f, undefined, trgFilter_a8f, arguments);
    IpcBuild.buildLibs(objList_674, undefined, trgFilter_674, ["profile=smp"]);
    IpcBuild.buildLibs(objList_m3, undefined, trgFilter_m3, ["profile=smp"]);
    IpcBuild.buildLibs(objList_a8f, undefined, trgFilter_a8f, ["profile=smp"]);
}

Pkg.otherFiles = [
    "package.bld",
    "InterruptDsp.c",
    "InterruptDucati.c",
    "InterruptHost.c"
].concat(objList_common);

/* include source files in the release package */
Pkg.attrs.exportSrc = true;
Pkg.attrs.exportCfg = true;

Pkg.generatedFiles.$add("lib/");
