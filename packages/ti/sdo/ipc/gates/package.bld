/*
 * Copyright (c) 2012-2013, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 *
 */

var IpcBuild = xdc.loadCapsule("ti/sdo/ipc/Build.xs");

var objList_0 = [
    "GateMPSupportNull",
    "GatePeterson",
    "GatePetersonN"
];

var objList_3 = [
    "GateHWSem",
    "GateHWSpinlock",
].concat(objList_0);

var objList_1 = [
    "GateAAMonitor",
    "GateAAMonitor_asm",
].concat(objList_3);

var objList_2 = [
    "GateHWSpinlock",
].concat(objList_0);

var trgFilter_1 = {
    field: "isa",
    list: [ "64P" ]
};

var trgFilter_2 = {
    field: "isa",
    list: [ "674", "64T", "v7M", "v7M4", "v7A", "v7A8", "v7A15", "arp32" ]
};

var trgFilter_3 = {
    field: "isa",
    list: [ "66" ]
};

var trgFilter_0 = {
    field: "noIsa",
    list: trgFilter_1.list.concat(trgFilter_2.list).concat(trgFilter_3.list)
};

/* generate makefiles */
IpcBuild.buildLibs(objList_0, undefined, trgFilter_0, arguments);
IpcBuild.buildLibs(objList_1, undefined, trgFilter_1, arguments);
IpcBuild.buildLibs(objList_2, undefined, trgFilter_2, arguments);
IpcBuild.buildLibs(objList_3, undefined, trgFilter_3, arguments);

/* generate smp makefiles */
IpcBuild.buildLibs(objList_0, undefined, trgFilter_0, ["profile=smp"]);
IpcBuild.buildLibs(objList_1, undefined, trgFilter_1, ["profile=smp"]);
IpcBuild.buildLibs(objList_2, undefined, trgFilter_2, ["profile=smp"]);
IpcBuild.buildLibs(objList_3, undefined, trgFilter_3, ["profile=smp"]);

Pkg.otherFiles = [ "package.bld" ];

/* include source files in the release package */
Pkg.attrs.exportSrc = true;
Pkg.attrs.exportCfg = true;

Pkg.generatedFiles.$add("lib/");
