/*
 * Copyright (c) 2012-2013, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/*
 * This package distributes its sources in the default release.  This is to
 * enable better understanding by the customer/field, as well as enable
 * modification and profiling techniques in the field.
 */
Pkg.attrs.exportSrc = true;

Pkg.otherFiles = ["package.bld", "_TransportRpmsg.h"];

var SRCS = ["TransportRpmsgSetup.c", "TransportRpmsg.c"];

/* remove this output directory during a clean */
Pkg.generatedFiles.$add("lib/");

var myCopts = "";

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

    if (targ.$name.match(/^ti\.targets\.*/)) {
        myCopts = "--gcc";  /* Rpmsg.h requires gcc-isms */
    } else {
        myCopts = "";
    }

    /* Build for all profiles */
    for (var profile in targ.profiles) {

        Pkg.addLibrary("lib/" + profile + "/" + Pkg.name, targ, {
            profile: profile,
            copts: myCopts
        }).addObjects(SRCS);

        if (targ.isa.match(/^v7M(|4)$/)) {
            /* for now, build 'special' lib compatible with OMAP5 HLOS */
            Pkg.addLibrary("lib/" + profile + "/" + Pkg.name + "_omap5", targ, {
                profile: profile,
                copts: myCopts + " -DRPMSG_NS_2_0"
            }).addObjects(SRCS);

            /* for now, build 'special' lib compatible with VAYU HLOS */
            Pkg.addLibrary("lib/" + profile + "/" + Pkg.name + "_vayu", targ, {
                profile: profile,
                copts: myCopts + " -DRPMSG_NS_2_0"
            }).addObjects(SRCS);
        }

        if (targ.isa == "C64T") {
            /* for now, build 'special' lib compatible with OMAP5 HLOS */
            Pkg.addLibrary("lib/" + profile + "/" + Pkg.name + "_omap5", targ, {
                profile: profile,
                copts: myCopts + " -DRPMSG_NS_2_0"
            }).addObjects(SRCS);
        }

        if (targ.isa == "66") {
            /* for now, build 'special' lib compatible with VAYU HLOS */
            Pkg.addLibrary("lib/" + profile + "/" + Pkg.name + "_vayu", targ, {
                profile: profile,
                copts: myCopts + " -DRPMSG_NS_2_0"
            }).addObjects(SRCS);
        }

    }
}
